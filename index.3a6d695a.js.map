{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAY,SAAS,gBAAgB,CAAC,MACtC,EAAgB,SAAS,aAAa,CAAC,MAE7C,SAAS,EAAU,CAAO,EACxB,IAAM,EAAS,EAAQ,OAAO,CAAC,MAAM,CAErC,GAAI,EAAQ,CACV,IAAI,EAAgB,EAAO,KAAK,CAAC,GAIjC,OAAO,OAFP,EAAgB,EAAc,KAAK,CAAC,KAAK,IAAI,CAAC,IAGhD,CAEA,OAAO,CACT,CAQA,EAAc,SAAS,CAAG,GAI1B,AAPS,AAFW,EAOQ,GALV,IAAI,CAAC,SAAC,CAAA,CAAG,CAAzB,EAA+B,OAAA,EAAU,GAAK,EAAU,E,GAO/C,OAAO,CAAC,SAAC,CAApB,EACE,EAAc,WAAW,CAAC,EAC5B,GAKS,AAFU,EAiBN,GAfI,GAAG,CAAC,SAAC,CAApB,EACE,IAAM,EAAc,EAAQ,WAAW,CAAC,IAAI,GACtC,EAAS,EAAQ,OAAO,CAAC,MAAM,CAIrC,MAAO,CACL,KAAM,EACN,SALe,EAAQ,OAAO,CAAC,QAAQ,CAMvC,OAAA,EACA,IANU,EAAQ,OAAO,CAAC,GAAG,AAO/B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar employees = document.querySelectorAll(\"li\");\nvar listEmployees = document.querySelector(\"ul\");\nfunction getSalary(element) {\n    var salary = element.dataset.salary;\n    if (salary) {\n        var cleanedSalary = salary.slice(1);\n        cleanedSalary = cleanedSalary.split(\",\").join(\"\");\n        return Number(cleanedSalary);\n    }\n    return 0;\n}\nfunction sortList(list) {\n    var listItem = _to_consumable_array(list);\n    return listItem.sort(function(a, b) {\n        return getSalary(b) - getSalary(a);\n    });\n}\nlistEmployees.innerHTML = \"\";\nvar sortedList = sortList(employees);\nsortedList.forEach(function(element) {\n    listEmployees.appendChild(element);\n});\nfunction getEmployees(employeesList) {\n    var emplArr = _to_consumable_array(employeesList);\n    return emplArr.map(function(element) {\n        var nameElement = element.textContent.trim();\n        var salary = element.dataset.salary;\n        var position = element.dataset.position;\n        var age = element.dataset.age;\n        return {\n            name: nameElement,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n}\ngetEmployees(employees);\n\n//# sourceMappingURL=index.3a6d695a.js.map\n","'use strict';\n\n// write code here\n\nconst employees = document.querySelectorAll('li');\nconst listEmployees = document.querySelector('ul');\n\nfunction getSalary(element) {\n  const salary = element.dataset.salary;\n\n  if (salary) {\n    let cleanedSalary = salary.slice(1);\n\n    cleanedSalary = cleanedSalary.split(',').join('');\n\n    return Number(cleanedSalary);\n  }\n\n  return 0;\n}\n\nfunction sortList(list) {\n  const listItem = [...list];\n\n  return listItem.sort((a, b) => getSalary(b) - getSalary(a));\n}\n\nlistEmployees.innerHTML = '';\n\nconst sortedList = sortList(employees);\n\nsortedList.forEach((element) => {\n  listEmployees.appendChild(element);\n});\n\nfunction getEmployees(employeesList) {\n  const emplArr = [...employeesList];\n\n  return emplArr.map((element) => {\n    const nameElement = element.textContent.trim();\n    const salary = element.dataset.salary;\n    const position = element.dataset.position;\n    const age = element.dataset.age;\n\n    return {\n      name: nameElement,\n      position,\n      salary,\n      age,\n    };\n  });\n}\n\ngetEmployees(employees);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","employees","document","querySelectorAll","listEmployees","querySelector","getSalary","element","salary","dataset","cleanedSalary","Number","split","join","innerHTML","sortedList","listItem","sort","a","b","forEach","appendChild","emplArr","map","nameElement","textContent","trim","position","age"],"version":3,"file":"index.3a6d695a.js.map"}